// Generated by view binder compiler. Do not edit!
package com.example.lol_deliver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lol_deliver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack3;

  @NonNull
  public final Button button4;

  @NonNull
  public final View divider3;

  @NonNull
  public final EditText editData;

  @NonNull
  public final TextView tvPersonal;

  private ActivityEditorBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack3,
      @NonNull Button button4, @NonNull View divider3, @NonNull EditText editData,
      @NonNull TextView tvPersonal) {
    this.rootView = rootView;
    this.btnBack3 = btnBack3;
    this.button4 = button4;
    this.divider3 = divider3;
    this.editData = editData;
    this.tvPersonal = tvPersonal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back3;
      ImageView btnBack3 = ViewBindings.findChildViewById(rootView, id);
      if (btnBack3 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.divider3;
      View divider3 = ViewBindings.findChildViewById(rootView, id);
      if (divider3 == null) {
        break missingId;
      }

      id = R.id.edit_data;
      EditText editData = ViewBindings.findChildViewById(rootView, id);
      if (editData == null) {
        break missingId;
      }

      id = R.id.tv_personal;
      TextView tvPersonal = ViewBindings.findChildViewById(rootView, id);
      if (tvPersonal == null) {
        break missingId;
      }

      return new ActivityEditorBinding((ConstraintLayout) rootView, btnBack3, button4, divider3,
          editData, tvPersonal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
